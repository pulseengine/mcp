[package]
name = "pulseengine-mcp-macros"
version.workspace = true
edition.workspace = true
authors.workspace = true
license.workspace = true
description = "Procedural macros for PulseEngine MCP Framework - simplified server and tool development"
homepage.workspace = true
repository.workspace = true
documentation = "https://docs.rs/pulseengine-mcp-macros"
readme = "README.md"
keywords = ["mcp", "macros", "procedural", "tools", "server"]
categories = ["development-tools", "api-bindings"]
rust-version.workspace = true

[lib]
proc-macro = true

[dependencies]
# Procedural macro dependencies
proc-macro2 = "1.0"
quote = "1.0"
syn = { version = "2.0", features = ["full", "extra-traits"] }

# For attribute parsing
darling = "0.20"

# JSON schema generation
schemars = { version = "1.0", features = ["chrono04"] }

# Serialization
serde = { workspace = true }
serde_json = { workspace = true }

# Optional authentication support
pulseengine-mcp-auth = { workspace = true, optional = true }

# Optional stdio logging support
tracing-subscriber = { workspace = true, optional = true }

[features]
default = ["stdio-logging"]
stdio-logging = ["dep:tracing-subscriber"]
auth = ["dep:pulseengine-mcp-auth"]

[dev-dependencies]
trybuild = "1.0"
tokio-test = "0.4"
tokio = { workspace = true, features = ["macros", "rt-multi-thread", "time"] }
anyhow = "1.0"
serde_json = "1.0"
async-trait = { workspace = true }
thiserror = { workspace = true }
tracing = { workspace = true }
pulseengine-mcp-protocol = { workspace = true }
pulseengine-mcp-server = { workspace = true }
pulseengine-mcp-transport = { workspace = true }
